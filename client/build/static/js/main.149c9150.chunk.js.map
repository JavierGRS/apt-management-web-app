{"version":3,"sources":["images/logo-olecosta.svg","firebase.js","constants/url.js","service/postSignUp.js","contexts/AuthContext.js","routes/PrivateRoute.js","service/getTicket.js","components/Tickets.js","service/getRole.js","components/NavBar.js","pages/Dashboard.js","pages/ForgotPassword.js","service/postTicket.js","service/getApartments.js","service/getWorkers.js","components/StateSelect.js","components/TypeSelect.js","components/WorkersSelect.js","components/TimeChoose.js","components/ApartmentsSelect.js","service/getTenantApartment.js","pages/NewTicket.js","pages/UpdateProfile.js","pages/Signup.js","pages/Login.js","service/putTicket.js","service/removeTicket.js","pages/TicketDetails.js","pages/EditTicket.js","components/WorkersTypeSelect.js","service/getWorkersType.js","pages/NewWorker.js","components/App.js","index.js"],"names":["module","exports","app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","url","postSignUp","props","a","completeURL","userID","userName","apartmentID","workerType","axios","post","then","response","data","catch","error","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","email","password","createUserWithEmailAndPassword","doc","user","uid","useEffect","onAuthStateChanged","value","login","signInWithEmailAndPassword","signup","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","PrivateRoute","Component","component","rest","render","to","getTicket","userToken","localStorage","getItem","console","log","role","state","get","headers","Authorization","Tickets","showTickets","setShowTickets","className","onClick","xmlns","width","height","fill","viewBox","fill-rule","d","tickets","length","map","t","Dropdown","Item","key","ticketID","type","aptName","aptNumber","description","pathname","ticket","getRole","status","require","NavBar","interfaceName","history","useHistory","push","Navbar","collapseOnSelect","expand","bg","variant","sticky","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","handleLogout","Dashboard","reqTickets","setReqTickets","acptTickets","setAcptTickets","doneTickets","setDoneTickets","userRol","setUserRol","window","alert","setup","Card","Body","ForgotPassword","emailRef","useRef","setError","message","setMessage","e","preventDefault","current","Alert","Form","onSubmit","Group","Label","Control","ref","required","Button","disabled","postTicket","postData","getApartments","getWorkers","forwardRef","target","typeRef","workersChange","typeOfState","defaultValue","onChange","s","typeOfTickets","workers","w","name","ticketState","apts","apt","number","getTenantApartment","NewTicket","aptRef","createRef","workerRef","stateRef","descriptionRef","setWorkers","setTypeOfState","setApts","getTodayDate","todaysDate","createdBy","createdTime","worker","today","Date","toISOString","slice","goBack","as","rows","UpdateProfile","passwordRef","passwordConfirmRef","promises","Promise","all","finally","placeholder","Signup","userNameRef","Login","getIdToken","token","setItem","putTicket","put","removeTicket","delete","TicketDetails","show","setShow","handleClose","location","useLocation","tenantID","Subtitle","Text","createdByName","workerName","userRole","handleAcceptTicket","handleRealizeTicket","Modal","onHide","Header","closeButton","Title","Footer","handleRemoveTicket","EditTicket","workersType","getWorkersType","NewWorker","workerTypeRef","setWorkersType","Container","App","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"qHAAAA,EAAOC,QAAU,IAA0B,2C,mHCGrCC,G,MAAMC,IAASC,cAAc,CACjCC,OAAQ,0CACRC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,+CAGIC,EAAOT,EAAIS,O,iBCVTC,EAFN,+CCIF,SAAeC,EAAtB,kC,4CAAO,WAA0BC,GAA1B,eAAAC,EAAA,6DAEGC,EAAcJ,EAAG,6BAAyBE,EAAMG,OAA/B,qBAAkDH,EAAMI,SAAxD,kBAA0EJ,EAAMK,YAAhF,uBAA0GL,EAAMM,YAFpI,SAKUC,IAAMC,KAAKN,EAAa,IAClCO,MAAK,SAAAC,GACJ,OAAOA,EAASC,QAEjBC,OAAM,SAAAC,GAEL,GAAIA,EAAMH,SAASC,KAAKE,MACpB,OAAOA,EAAMH,SAASC,KAAKE,SAZhC,oF,sBCAP,IAAMC,EAAcC,IAAMC,gBAEnB,SAASC,IACd,OAAOC,qBAAWJ,GAGb,SAASK,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SAAY,EACHC,qBADG,mBAClCC,EADkC,KACrBC,EADqB,OAEXF,oBAAS,GAFE,mBAElCG,EAFkC,KAEzBC,EAFyB,iDAIzC,qCAAAxB,EAAA,sDAAwByB,EAAxB,EAAwBA,MAAOC,EAA/B,EAA+BA,SAAUvB,EAAzC,EAAyCA,SAAUC,EAAnD,EAAmDA,YAAaC,EAAhE,EAAgEA,WAC9DT,EAAK+B,+BAA+BF,EAAOC,GACxClB,MAAK,SAAAoB,GACJ9B,EAAW,CACTI,OAAQ0B,EAAIC,KAAKC,IACjB3B,SAAUA,EACVC,YAAaA,EACbC,WAAYA,OAEbM,OAAM,SAAUC,GACjB,OAAOA,KAVb,4CAJyC,sBAsCzCmB,qBAAU,WAMR,OAJoBnC,EAAKoC,oBAAmB,SAAAH,GAC1CP,EAAeO,GACfL,GAAW,QAKZ,IAEH,IAAMS,EAAQ,CACZZ,cACAa,MAjCF,SAAeT,EAAOC,GACpB,OAAO9B,EAAKuC,2BAA2BV,EAAOC,IAiC9CU,OApDuC,4CAqDvCC,OA/BF,WACE,OAAOzC,EAAK0C,WA+BZC,cA5BF,SAAuBd,GACrB,OAAO7B,EAAK4C,uBAAuBf,IA4BnCgB,YAzBF,SAAqBhB,GACnB,OAAOJ,EAAYoB,YAAYhB,IAyB/BiB,eAtBF,SAAwBhB,GACtB,OAAOL,EAAYqB,eAAehB,KAwBpC,OACE,kBAACb,EAAY8B,SAAb,CAAsBV,MAAOA,IACzBV,GAAWJ,G,4BCnEJ,SAASyB,EAAT,GAA0D,IAAvBC,EAAsB,EAAjCC,UAAyBC,EAAQ,6BAC9D1B,EAAgBL,IAAhBK,YAER,OACE,kBAAC,IAAD,iBACM0B,EADN,CAEEC,OAAQ,SAAAjD,GACN,OAAOsB,EAAc,kBAACwB,EAAc9C,GAAY,kBAAC,IAAD,CAAUkD,GAAG,e,aCP9D,SAAeC,EAAtB,kC,4CAAO,WAAyBnD,GAAzB,iBAAAC,EAAA,yDAEGmD,EAAYC,aAAaC,QAAQ,cACnCpD,EAAc,GAElBqD,QAAQC,IAAIxD,EAAMyD,MAEC,UAAfzD,EAAMyD,KAPP,gBAQCvD,EAAcJ,EAAG,+BAA2BE,EAAMG,OAAjC,kBAAiDH,EAAM0D,OARzE,0BASuB,WAAf1D,EAAMyD,KATd,iBAUCvD,EAAcJ,EAAG,gCAA4BE,EAAMG,OAAlC,kBAAkDH,EAAM0D,OAV1E,2BAWuB,WAAf1D,EAAMyD,KAXd,iBAYCvD,EAAcJ,EAAG,gCAA4BE,EAAMG,OAAlC,kBAAkDH,EAAM0D,OAZ1E,iDAcQ,IAdR,yBAiBUnD,IAAMoD,IAAIzD,EAAa,CAChC0D,QAAS,CACLC,cAAe,UAAYT,KAEhC3C,MAAK,SAAAC,GACJ,OAAOA,EAASC,QAEjBC,OAAM,SAAAC,GACL,GAAIA,EAAMH,UACFG,EAAMH,SAASC,KAAKE,MACpB,MAAO,MA3BhB,sF,kCCyEQiD,MAzEf,SAAiB9D,GAAQ,IAAD,EACkBqB,oBAAS,GAD3B,mBACb0C,EADa,KACAC,EADA,KAGpB,OACI,yBAAKC,UAAU,OACX,4BACIC,QAAS,kBAAoBF,GAAdD,KAEf,4BAAQE,UAAU,aAAlB,UAAsCjE,EAAM0D,OAC5C,yBAAKS,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,KAAK,eAAeL,UAAU,mBAAmBM,QAAQ,aACpH,0BAAMC,YAAU,UAAUC,EAAE,kJAMP,IAAzBzE,EAAM0E,QAAQC,QAAgBZ,EAC1B,4DAEAA,GAAe/D,EAAM0E,QAAQE,KAAI,SAACC,GAC9B,OACI,kBAACC,EAAA,EAASC,KAAV,CAAeC,IAAKH,EAAEI,UAClB,uCAAaJ,EAAEK,KAAf,KACA,6BACA,+CAAqBL,EAAEM,QAAvB,IAAiCN,EAAEO,UAAnC,KACA,6BACA,kDAAqBP,EAAEQ,aACvB,6BACA,kBAAC,IAAD,CAAMnC,GAAI,CACNoC,SAAS,kBACT5B,MAAO,CACH6B,OAAQV,EACR1E,OAAQH,EAAMG,OACdsD,KAAMzD,EAAMyD,QALpB,sBC7BzB,SAAe+B,EAAtB,kC,4CAAO,WAAuBxF,GAAvB,iBAAAC,EAAA,6DAEGmD,EAAYC,aAAaC,QAAQ,cAEjCpD,EAAcJ,EAAG,mBAAH,UAA8BE,EAAMG,QAJrD,SAMUI,IAAMoD,IAAIzD,EAAa,CAChC0D,QAAS,CACLC,cAAe,UAAYT,KAEhC3C,MAAK,SAAAC,GACJ,OAAOA,EAASC,QAEjBC,OAAM,SAAAC,GACL,OAAIA,EAAMH,UACFG,EAAMH,SAAS+E,OACR,kBAhBhB,oF,4DCCMC,EAAQ,KAIN,SAASC,EAAT,GAAoC,IAAlBC,EAAiB,EAAjBA,cAErBtD,EAAWrB,IAAXqB,OACFuD,EAAUC,cAH8B,4CAK9C,sBAAA7F,EAAA,+EAEcqC,IAFd,OAGQuD,EAAQE,KAAK,UAHrB,wGAL8C,sBAc9C,OACI,oCACI,kBAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAOC,QAAQ,OAAOC,OAAO,OACjE,kBAACL,EAAA,EAAOM,MAAR,CAAcC,KAAK,IAAItC,UAAU,IAM7B,4BAAQA,UAAU,cAAc2B,IAEpC,kBAACI,EAAA,EAAOQ,OAAR,CAAeC,gBAAc,0BAC7B,kBAACT,EAAA,EAAOU,SAAR,CAAiBC,GAAG,yBAChB,kBAACC,EAAA,EAAD,CAAK3C,UAAU,WACX,kBAAC2C,EAAA,EAAIC,KAAL,CAAUN,KAAK,cAAf,eACA,kBAACO,EAAA,EAAD,CAAaC,MAAM,QAAQJ,GAAG,2BAC1B,kBAACG,EAAA,EAAY/B,KAAb,CAAkBwB,KAAK,eAAvB,qBAEJ,kBAACK,EAAA,EAAIC,KAAL,CAAU3C,QAAS,kBAhCO,0CAgCD8C,KAAzB,wBC9BT,SAASC,IAAa,IAAD,EACR5F,mBAAS,IADD,gCAEFJ,KAAxBK,EAF0B,EAE1BA,YACFuE,GAH4B,EAEbvD,OACLwD,eAHkB,EAIEzE,mBAAS,IAJX,mBAI3B6F,EAJ2B,KAIfC,EAJe,OAKI9F,mBAAS,IALb,mBAK3B+F,EAL2B,KAKdC,EALc,OAMIhG,mBAAS,IANb,mBAM3BiG,EAN2B,KAMdC,EANc,OAOJlG,mBAAS,UAPL,mBAO3BmG,EAP2B,KAOlBC,EAPkB,KAS5BtH,EAASmB,EAAYS,IATO,4CAWlC,4BAAA9B,EAAA,+EAEuBuF,EAAQ,CACzBrF,OAAQA,IAHd,aAMiB,kBAJPsD,EAFV,SAOMoC,EAAQE,KAAK,UAGf0B,EAAWhE,GAVf,KAYI0D,EAZJ,SAYwBhE,EAAU,CAC5BO,MAAO,YACPvD,OAAQA,EACRsD,KAAMA,IAfZ,8CAkBI4D,EAlBJ,UAkByBlE,EAAU,CAC7BO,MAAO,WACPvD,OAAQA,EACRsD,KAAMA,IArBZ,+CAuBI8D,EAvBJ,UAuByBpE,EAAU,CAC7BO,MAAO,OACPvD,OAAQA,EACRsD,KAAMA,IA1BZ,qFA8BQ,KAAM/C,UACRgH,OAAOC,MAAM,uCAEV,KAAMlC,QACTiC,OAAOC,MAAM,uCAlCnB,2DAXkC,sBA0DlC,OANA3F,qBAAU,YApDwB,mCAsDhC4F,KAEC,IAID,oCACE,kBAACjC,EAAD,CAAQC,cAAc,cACtB,kBAACiC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,KACE,kBAAC,EAAD,CAASpE,MAAO,cAAeD,KAAM+D,EAASrH,OAAQA,EAAQuE,QAASwC,IACvE,kBAAC,EAAD,CAASxD,MAAO,YAAaD,KAAM+D,EAASrH,OAAQA,EAAQuE,QAAS0C,IACrE,kBAAC,EAAD,CAAS1D,MAAO,aAAcD,KAAM+D,EAASrH,OAAQA,EAAQuE,QAAS4C,O,8BCvEjE,SAASS,IACtB,IAAMC,EAAWC,mBACTzF,EAAkBvB,IAAlBuB,cAF+B,EAGbnB,mBAAS,IAHI,mBAGhCR,EAHgC,KAGzBqH,EAHyB,OAIT7G,mBAAS,IAJA,mBAIhC8G,EAJgC,KAIvBC,EAJuB,OAKT/G,oBAAS,GALA,mBAKhCG,EALgC,KAKvBC,EALuB,iDAOvC,WAA4B4G,GAA5B,SAAApI,EAAA,6DACEoI,EAAEC,iBADJ,SAIIF,EAAW,IACXF,EAAS,IACTzG,GAAW,GANf,SAOUe,EAAcwF,EAASO,QAAQrG,OAPzC,OAQIkG,EAAW,6CARf,kDAUIF,EAAS,4BAVb,QAaEzG,GAAW,GAbb,2DAPuC,sBAuBvC,OACE,oCACE,kBAACoG,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,KACE,wBAAI7D,UAAU,oBAAd,6BACCpD,GAAS,kBAAC2H,EAAA,EAAD,CAAOpC,QAAQ,UAAUvF,GAClCsH,GAAW,kBAACK,EAAA,EAAD,CAAOpC,QAAQ,WAAW+B,GACtC,kBAACM,EAAA,EAAD,CAAMC,SA9ByB,6CA+B7B,kBAACD,EAAA,EAAKE,MAAN,CAAYhC,GAAG,SACb,kBAAC8B,EAAA,EAAKG,MAAN,cACA,kBAACH,EAAA,EAAKI,QAAN,CAAc3D,KAAK,QAAQ4D,IAAKd,EAAUe,UAAQ,KAEpD,kBAACC,EAAA,EAAD,CAAQC,SAAUzH,EAASyC,UAAU,QAAQiB,KAAK,UAAlD,8BAIF,yBAAKjB,UAAU,0BACb,kBAAC,IAAD,CAAMf,GAAG,UAAT,wBAIN,yBAAKe,UAAU,0BAAf,6BACyB,kBAAC,IAAD,CAAMf,GAAG,WAAT,iBC/CxB,SAAegG,EAAtB,kC,4CAAO,WAA0BlJ,GAA1B,iBAAAC,EAAA,6DAEGmD,EAAYC,aAAaC,QAAQ,cAEvCC,QAAQC,IAAIxD,EAAMG,QAEZD,EAAcJ,EAAG,8BAA0BE,EAAMG,QANpD,SAUUI,IAAMC,KAAKN,EAAaF,EAAMmJ,SAAU,CACjDvF,QAAS,CACLC,cAAe,UAAYT,KAEhC3C,MAAK,SAAAC,GAEJ,OAAOA,EAASC,QAEjBC,OAAM,SAAAC,GAEL,GAAIA,EAAMH,SAASC,KAAKE,MACpB,MAAO,MArBZ,oF,sBCAA,SAAeuI,IAAtB,+B,4CAAO,4BAAAnJ,EAAA,6DAEGmD,EAAYC,aAAaC,QAAQ,cAEnBxD,EAAG,kBAJpB,SAMUS,IAAMoD,IAFC7D,8DAEgB,CAChC8D,QAAS,CACLC,cAAe,UAAYT,KAEhC3C,MAAK,SAAAC,GACJ,OAAOA,EAASC,QAEjBC,OAAM,SAAAC,GACL,OAAIA,EAAMH,UACFG,EAAMH,SAASC,KAAKE,MACb,MAhBhB,oF,sBCCA,SAAewI,EAAtB,kC,4CAAO,WAA0BrJ,GAA1B,iBAAAC,EAAA,6DAEGmD,EAAYC,aAAaC,QAAQ,cAEjCpD,EAAcJ,EAAG,6BAAyBE,EAAMkF,MAJnD,SAOU3E,IAAMoD,IAAIzD,EAAa,CAChC0D,QAAS,CACLC,cAAe,UAAYT,KAEhC3C,MAAK,SAAAC,GAEJ,OAAOA,EAASC,QAEjBC,OAAM,SAAAC,GACL,GAAIA,EAAMH,UACFG,EAAMH,SAASC,KAAKE,MACpB,MAAO,MAlBhB,oF,sBC6BQE,UAAMuI,YA9BrB,SAAqBtJ,EAAO8I,GAAK,4CAE7B,WAA6BT,GAA7B,SAAApI,EAAA,6DACIsD,QAAQC,IAAIsF,EAAIP,QAAQrG,OACxB4G,EAAIP,QAAQrG,MAAQmG,EAAEkB,OAAOrH,MAFjC,KAGIlC,EAHJ,SAG8BqJ,EAAW,CAAEnE,KAAMlF,EAAMwJ,UAHvD,wBAGUC,cAHV,4DAF6B,sBAU7B,OAEI,6BAEqC,IAA7BzJ,EAAM0J,YAAY/E,OACd,uDAEA,4BAAQV,UAAU,gCAAgC0F,aAAc3J,EAAM2J,aAAcb,IAAKA,EAAKc,SAjBhF,SAAD,oCAmBL5J,EAAM0J,YAAY9E,KAAI,SAACiF,GACnB,OAAO,4BAAQ7E,IAAK6E,EAAElD,GAAIzE,MAAO2H,EAAEnG,OAAQmG,EAAEnG,eCG9D3C,UAAMuI,YAvBrB,SAAoBtJ,EAAO8I,GAAK,4CAE5B,WAA4BT,GAA5B,SAAApI,EAAA,6DACIsD,QAAQC,IAAI6E,EAAEkB,OAAOrH,OACrB4G,EAAIP,QAAQrG,MAAQmG,EAAEkB,OAAOrH,MAFjC,KAGIlC,EAHJ,SAG8BqJ,EAAW,CAAEnE,KAAM4D,EAAIP,QAAQrG,QAH7D,wBAGUuH,cAHV,4DAF4B,sBAQ5B,OACI,6BAEI,4BAAQxF,UAAU,gCAAgC0F,aAAc3J,EAAM2J,aAAcb,IAAKA,EAAKc,SAXzE,SAAD,oCAaZ5J,EAAM8J,cAAclF,KAAI,SAACM,GACrB,OAAO,4BAAQF,IAAKE,EAAKyB,GAAIzE,MAAOgD,EAAKA,MAAOA,EAAKA,cCgB9DnE,UAAMuI,YA/BrB,SAAuBtJ,EAAO8I,GAM1B,OACI,6BACKvF,QAAQC,IAAIxD,EAAM+J,SAClBxG,QAAQC,IAAI,UAAYxD,EAAM2J,cAEF,IAAzB3J,EAAM+J,QAAQpF,OACV,8CAEA,4BAAQV,UAAU,gCAAgC0F,aAAc3J,EAAM2J,aAAcb,IAAKA,EAAKc,SAZ9G,SAAsBvB,GAClBS,EAAIP,QAAQrG,MAAQmG,EAAEkB,OAAOrH,QAaTlC,EAAM+J,QAAQnF,KAAI,SAACoF,GAEf,OADAzG,QAAQC,IAAIxD,EAAM2J,cACX,4BAAQ3E,IAAKgF,EAAErD,GAAIzE,MAAO8H,EAAErD,IAA5B,IAAkCqD,EAAEC,KAApC,aCExBlJ,IAAMuI,YApBrB,SAAoBtJ,EAAO8I,GAMvB,OACI,6BAE2B,cAAtB9I,EAAMkK,aACH,gDACI,2BAAOhF,KAAK,iBAAiByB,GAAG,eAC5BsD,KAAK,eAAenB,IAAKA,EACzBc,SAXpB,SAAoBvB,GAChBS,EAAIP,QAAQrG,MAAQmG,EAAEkB,OAAOrH,OAUS6G,UAAQ,SCcvChI,UAAMuI,YA5BrB,SAA0BtJ,EAAO8I,GAM7B,OACI,6BAG8B,IAAtB9I,EAAMmK,KAAKxF,OACP,kDAGA,4BAAQV,UAAU,gCAAgC0F,aAAc3J,EAAM2J,aAAcb,IAAKA,EAAKc,SAZ9G,SAAmBvB,GACfS,EAAIP,QAAQrG,MAAQmG,EAAEkB,OAAOrH,QAaTlC,EAAMmK,KAAKvF,KAAI,SAACwF,GACZ,OAAO,4BAAQpF,IAAKoF,EAAIzD,GAAIzE,MAAOkI,EAAIzD,IAAKyD,EAAIH,KAAzC,IAAgDG,EAAIC,OAApD,aCfhC,SAAeC,EAAtB,kC,4CAAO,WAAkCtK,GAAlC,iBAAAC,EAAA,6DAEGmD,EAAYC,aAAaC,QAAQ,cAEjCpD,EAAcJ,EAAG,mCAA+BE,EAAMG,QAJzD,SAMUI,IAAMoD,IAAIzD,EAAa,CAChC0D,QAAS,CACLC,cAAe,UAAYT,KAEhC3C,MAAK,SAAAC,GACJ,OAAOA,EAASC,QACjBC,OAAM,SAAAC,GACL,MAAO,MAbR,oF,sBC6JQ0J,OA9If,WAGI,IAAMC,EAASC,oBAAU,IACnBC,EAAYzC,iBAAO,MACnBuB,EAAUvB,iBAAO,IACjB0C,EAAW1C,iBAAO,IAClB2C,EAAiB3C,iBAAO,IAPb,EAQa5G,mBAAS,IARtB,mBAQV0I,EARU,KAQDc,EARC,KASXhF,EAAUC,cACRxE,EAAgBL,IAAhBK,YAVS,EAWqBD,mBAAS,IAX9B,mBAWVqI,EAXU,KAWGoB,EAXH,OAYOzJ,mBAAS,IAZhB,mBAYV8I,EAZU,KAYJY,EAZI,KAcX5K,EAASmB,EAAYS,IAdV,4CAwBjB,sBAAA9B,EAAA,sEAEuBuF,EAAQ,CACvBrF,OAAQA,IAHhB,UAMiB,WANjB,oCAOQ4K,EAPR,SAOuBT,EAAmB,CAC9BnK,OAAQA,IARpB,8CAUQ2K,EAAe,CACX,CAAEnE,GAAI,EAAGjD,MAAO,eAX5B,oCAcQqH,EAdR,UAcsB3B,IAdtB,mCAeQ0B,EAAe,CACX,CAAEnE,GAAI,EAAGjD,MAAO,aAChB,CAAEiD,GAAI,EAAGjD,MAAO,YAChB,CAAEiD,GAAI,EAAGjD,MAAO,UAlB5B,6CAxBiB,kEAkDjB,WAA4B2E,GAA5B,mBAAApI,EAAA,6DAEIoI,EAAEC,iBAEInI,EAASN,EAAKyB,YAAYS,IAJpC,SAK6BiJ,IAL7B,cAKUC,EALV,OAOQ9B,EAAW,CACX9I,YAAamK,EAAOjC,QAAQrG,MAC5BwB,MAAOiH,EAASpC,QAAQrG,MACxBgD,KAAMsE,EAAQjB,QAAQrG,MACtBmD,YAAauF,EAAerC,QAAQrG,MACpCgJ,UAAW/K,EACXgL,YAAaF,GAIc,cAA3BN,EAASpC,QAAQrG,QACjBiH,EAASiC,OAASV,EAAUnC,QAAQrG,OAGxCqB,QAAQC,IAAI2F,GArBhB,UAuBUD,EAAW,CACbC,SAAUA,EACVhJ,OAAQA,IAzBhB,QA4BI0F,EAAQE,KAAK,KA5BjB,6CAlDiB,+BAkFFiF,IAlFE,2EAkFjB,4BAAA/K,EAAA,6DAEQoL,GAAQ,IAAIC,MAAOC,cAAcC,MAAM,GAAI,GAFnD,kBAGWH,GAHX,4CAlFiB,sBA8FjB,OALArJ,qBAAU,YAzFO,mCA0Fb4F,KAED,IAGC,oCAGI,kBAACC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,KAAN,KACI,yBAAK7D,UAAU,kCACX,4BAAQiB,KAAK,SAASkB,QAAQ,OAAOlC,QAAS,kBAAM2B,EAAQ4F,UAAUxH,UAAU,6BAC5E,uBAAGA,UAAU,6BAEjB,wBAAIA,UAAU,WAAd,gBAEJ,kBAACwE,EAAA,EAAD,CAAMC,SA1GL,6CA2GG,kBAACD,EAAA,EAAKE,MAAN,CAAYhC,GAAG,mBACX,kBAAC8B,EAAA,EAAKG,MAAN,qBACA,kBAAC,EAAD,CAAkBE,IAAK0B,EAAQL,KAAMA,KAEzC,kBAAC1B,EAAA,EAAKE,MAAN,CAAYhC,GAAG,eACX,kBAAC8B,EAAA,EAAKG,MAAN,gBACA,kBAAC,EAAD,CAAaY,QAASA,EAAQjB,QAAQrG,MAAOwH,YAAaA,EAAaZ,IAAK6B,EAAUlB,cAAe,SAAAM,GAAO,OAAIc,EAAWd,OAE/H,kBAACtB,EAAA,EAAKE,MAAN,CAAYhC,GAAG,cACX,kBAAC8B,EAAA,EAAKG,MAAN,cACA,kBAAC,EAAD,CAAYa,cAAe,SAAAM,GAAO,OAAIc,EAAWd,IAAUjB,IAAKU,EAASM,cArG3E,CAClB,CAAEnD,GAAI,EAAGzB,KAAM,YACf,CAAEyB,GAAI,EAAGzB,KAAM,UACf,CAAEyB,GAAI,EAAGzB,KAAM,mBAoGC,kBAACuD,EAAA,EAAKE,MAAN,CAAYhC,GAAG,iBACmB,aAA3BgE,EAASpC,QAAQrG,OAAqD,SAA3ByI,EAASpC,QAAQrG,QAC3D,oCACI,kBAACuG,EAAA,EAAKG,MAAN,gBACA,kBAAC,EAAD,CAAeE,IAAK4B,EAAWX,QAASA,EAASL,YAAaA,MAI1E,kBAACjB,EAAA,EAAKE,MAAN,CAAYhC,GAAG,eACX,kBAAC8B,EAAA,EAAKG,MAAN,wBACA,kBAACH,EAAA,EAAKI,QAAN,CAAc6C,GAAG,WAAWC,KAAM,EAAG7C,IAAK8B,EAAgB7B,UAAQ,KAEtE,kBAACC,EAAA,EAAD,CAAQ/E,UAAU,QAAQiB,KAAK,UAA/B,sBChJT,SAAS0G,KACtB,IAAM5D,EAAWC,mBACX4D,EAAc5D,mBACd6D,EAAqB7D,mBAHW,EAIehH,IAA7CK,EAJ8B,EAI9BA,YAAaqB,EAJiB,EAIjBA,eAAgBD,EAJC,EAIDA,YAJC,EAKZrB,mBAAS,IALG,mBAK/BR,EAL+B,KAKxBqH,EALwB,OAMR7G,oBAAS,GAND,mBAM/BG,EAN+B,KAMtBC,EANsB,KAOhCoE,EAAUC,cA+BhB,OACE,oCACE,kBAAC+B,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,KACE,wBAAI7D,UAAU,oBAAd,kBACCpD,GAAS,kBAAC2H,EAAA,EAAD,CAAOpC,QAAQ,UAAUvF,GACnC,kBAAC4H,EAAA,EAAD,CAAMC,SAnCd,SAAsBL,GAEpB,GADAA,EAAEC,iBACEuD,EAAYtD,QAAQrG,QAAU4J,EAAmBvD,QAAQrG,MAC3D,OAAOgG,EAAS,0BAGlB,IAAM6D,EAAW,GACjBtK,GAAW,GACXyG,EAAS,IAELF,EAASO,QAAQrG,QAAUZ,EAAYI,OACzCqK,EAAShG,KAAKrD,EAAYsF,EAASO,QAAQrG,QAEzC2J,EAAYtD,QAAQrG,OACtB6J,EAAShG,KAAKpD,EAAekJ,EAAYtD,QAAQrG,QAGnD8J,QAAQC,IAAIF,GACTtL,MAAK,WACJoF,EAAQE,KAAK,QAEdnF,OAAM,WACLsH,EAAS,+BAEVgE,SAAQ,WACPzK,GAAW,QAWP,kBAACgH,EAAA,EAAKE,MAAN,CAAYhC,GAAG,SACb,kBAAC8B,EAAA,EAAKG,MAAN,cACA,kBAACH,EAAA,EAAKI,QAAN,CACE3D,KAAK,QACL4D,IAAKd,EACLe,UAAQ,EACRY,aAAcrI,EAAYI,SAG9B,kBAAC+G,EAAA,EAAKE,MAAN,CAAYhC,GAAG,YACb,kBAAC8B,EAAA,EAAKG,MAAN,iBACA,kBAACH,EAAA,EAAKI,QAAN,CACE3D,KAAK,WACL4D,IAAK+C,EACLM,YAAY,kCAGhB,kBAAC1D,EAAA,EAAKE,MAAN,CAAYhC,GAAG,oBACb,kBAAC8B,EAAA,EAAKG,MAAN,8BACA,kBAACH,EAAA,EAAKI,QAAN,CACE3D,KAAK,WACL4D,IAAKgD,EACLK,YAAY,kCAGhB,kBAACnD,EAAA,EAAD,CAAQC,SAAUzH,EAASyC,UAAU,QAAQiB,KAAK,UAAlD,aAMN,yBAAKjB,UAAU,0BACb,kBAAC,IAAD,CAAMf,GAAG,KAAT,YC3EO,SAASkJ,KACtB,IAAMpE,EAAWC,mBACX4D,EAAc5D,mBACd6D,EAAqB7D,mBACrBoE,EAAcpE,mBACZ5F,EAAWpB,IAAXoB,OALuB,EAMLhB,mBAAS,IANJ,mBAMxBR,EANwB,KAMjBqH,EANiB,OAOD7G,oBAAS,GAPR,mBAOxBG,EAPwB,KAOfC,EAPe,KAQzBoE,EAAUC,cACV0E,EAASC,oBAAU,IATM,EAUPpJ,mBAAS,IAVF,mBAUxB8I,EAVwB,KAUlBY,EAVkB,iDAY/B,WAA4B1C,GAA5B,SAAApI,EAAA,yDACEoI,EAAEC,iBAEEuD,EAAYtD,QAAQrG,QAAU4J,EAAmBvD,QAAQrG,MAH/D,yCAIWgG,EAAS,2BAJpB,uBASIA,EAAS,IACTzG,GAAW,GAVf,SAWUY,EAAO,CACXX,MAAOsG,EAASO,QAAQrG,MACxBP,SAAUkK,EAAYtD,QAAQrG,MAC9B9B,SAAUiM,EAAY9D,QAAQrG,MAC9B7B,YAAamK,EAAOjC,QAAQrG,QAflC,OAiBI2D,EAAQE,KAAK,UAjBjB,kDAmBImC,EAAS,+BAnBb,2DAZ+B,kEAoC/B,sBAAAjI,EAAA,kEACE8K,EADF,SACgB3B,IADhB,8EApC+B,sBA6C/B,OALApH,qBAAU,YAxCqB,mCAyC7B4F,KAEC,IAGD,oCACE,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,KACE,wBAAI7D,UAAU,oBAAd,eACCpD,GAAS,kBAAC2H,EAAA,EAAD,CAAOpC,QAAQ,UAAUvF,GACnC,kBAAC4H,EAAA,EAAD,CAAMC,SAnDiB,6CAoDrB,kBAACD,EAAA,EAAKE,MAAN,CAAYhC,GAAG,YACb,kBAAC8B,EAAA,EAAKG,MAAN,uBACA,kBAACH,EAAA,EAAKI,QAAN,CAAc3D,KAAK,OAAO4D,IAAKuD,EAAaF,YAAY,iBAAiBpD,UAAQ,KAEnF,kBAACN,EAAA,EAAKE,MAAN,CAAYhC,GAAG,SACb,kBAAC8B,EAAA,EAAKG,MAAN,cACA,kBAACH,EAAA,EAAKI,QAAN,CAAc3D,KAAK,QAAQ4D,IAAKd,EAAUe,UAAQ,KAEpD,kBAACN,EAAA,EAAKE,MAAN,CAAYhC,GAAG,YACb,kBAAC8B,EAAA,EAAKG,MAAN,sBACA,kBAACH,EAAA,EAAKI,QAAN,CAAc3D,KAAK,WAAW4D,IAAK+C,EAAa9C,UAAQ,KAE1D,kBAACN,EAAA,EAAKE,MAAN,CAAYhC,GAAG,oBACb,kBAAC8B,EAAA,EAAKG,MAAN,+BACA,kBAACH,EAAA,EAAKI,QAAN,CAAc3D,KAAK,WAAW4D,IAAKgD,EAAoB/C,UAAQ,KAEjE,kBAACN,EAAA,EAAKE,MAAN,CAAYhC,GAAG,cACb,kBAAC8B,EAAA,EAAKG,MAAN,oBACA,kBAAC,EAAD,CAAkBE,IAAK0B,EAAQL,KAAMA,KAGvC,kBAACnB,EAAA,EAAD,CAAQC,SAAUzH,EAASyC,UAAU,QAAQiB,KAAK,UAAlD,mBAMN,yBAAKjB,UAAU,0BAAf,6BACyB,kBAAC,IAAD,CAAMf,GAAG,UAAT,uBCjFhB,SAASoJ,KACtB,IAAMtE,EAAWC,mBACX4D,EAAc5D,mBACZ9F,EAAUlB,IAAVkB,MAHsB,EAIJd,mBAAS,IAJL,mBAIvBR,EAJuB,KAIhBqH,EAJgB,OAKA7G,oBAAS,GALT,mBAKdI,GALc,WAMxBoE,EAAUC,cANc,4CAQ9B,WAA4BuC,GAA5B,eAAApI,EAAA,6DACEoI,EAAEC,iBADJ,SAGIJ,EAAS,IACTzG,GAAW,GAJf,SAKUU,EAAM6F,EAASO,QAAQrG,MAAO2J,EAAYtD,QAAQrG,OAL5D,uBAMwBrC,EAAKyB,YAAYiL,aANzC,OAMUC,EANV,OAOInJ,aAAaoJ,QAAQ,aAAcD,GACnC3G,EAAQE,KAAK,KARjB,kDAUImC,EAAS,oBAVb,2DAR8B,sBAyB9B,OACE,oCACE,kBAACL,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,KAAN,KACE,wBAAI7D,UAAU,oBAAd,qBACCpD,GAAS,kBAAC2H,EAAA,EAAD,CAAOpC,QAAQ,UAAUvF,GACnC,kBAAC4H,EAAA,EAAD,CAAMC,SA/BgB,6CAgCpB,kBAACD,EAAA,EAAKE,MAAN,CAAYhC,GAAG,SACb,kBAAC8B,EAAA,EAAKG,MAAN,cACA,kBAACH,EAAA,EAAKI,QAAN,CAAc3D,KAAK,QAAQ4D,IAAKd,EAAUe,UAAQ,KAEpD,kBAACN,EAAA,EAAKE,MAAN,CAAYhC,GAAG,YACb,kBAAC8B,EAAA,EAAKG,MAAN,sBACA,kBAACH,EAAA,EAAKI,QAAN,CAAc3D,KAAK,WAAW4D,IAAK+C,EAAa9C,UAAQ,KAE1D,kBAACC,EAAA,EAAD,CAAQ/E,UAAU,QAAQiB,KAAK,UAA/B,sBAIF,yBAAKjB,UAAU,0BACb,kBAAC,IAAD,CAAMf,GAAG,oBAAT,sCAIN,yBAAKe,UAAU,0BAAf,6BACyB,kBAAC,IAAD,CAAMf,GAAG,WAAT,iB,cCrDxB,SAAewJ,GAAtB,mC,8CAAO,WAAyB1M,GAAzB,iBAAAC,EAAA,6DAEGmD,EAAYC,aAAaC,QAAQ,cACvCC,QAAQC,IAAIxD,EAAMiF,UAClB1B,QAAQC,IAAIxD,EAAMmJ,UAEZjJ,EAAcJ,EAAG,gCAA4BE,EAAMiF,UANtD,SAQU1E,IAAMoM,IAAIzM,EAAaF,EAAMmJ,SAAU,CAChDvF,QAAS,CACLC,cAAe,UAAYT,KAEhC3C,MAAK,SAAAC,GACJ,OAAOA,EAASC,QACjBC,OAAM,SAAAC,GACL,GAAIA,EAAMH,SAASC,KAAKE,MACpB,MAAO,MAhBZ,oF,sBCAA,SAAe+L,GAAtB,mC,8CAAO,WAA4B5M,GAA5B,iBAAAC,EAAA,6DAEGmD,EAAYC,aAAaC,QAAQ,cAEvCC,QAAQC,IAAIxD,EAAMiF,UAClB1B,QAAQC,IAAIxD,EAAMG,QAEZD,EAAcJ,EAAG,uBAAmBE,EAAMiF,SAAzB,mBAA4CjF,EAAMG,QAEzEoD,QAAQC,IAAItD,GATT,SAWUK,IAAMsM,OAAO3M,EAAa,CACnC0D,QAAS,CACLC,cAAe,UAAYT,KAEhC3C,MAAK,SAAAC,GAEJ,OAAOA,EAASC,QAEjBC,OAAM,SAAAC,GACL,OAAOA,KApBR,oF,sBCuMQiM,OAlMf,WAA0B,IAAD,EAGGzL,oBAAS,GAHZ,mBAGd0L,EAHc,KAGRC,EAHQ,KAKfC,EAAc,kBAAMD,GAAQ,IAG9BE,EAAWC,cACP5H,GAAW2H,EAASxJ,OAAS,IAA7B6B,OACApF,GAAW+M,EAASxJ,OAAS,IAA7BvD,OACAsD,GAASyJ,EAASxJ,OAAS,UAA3BD,KACFoC,EAAUC,cAZK,4CAcrB,sBAAA7F,EAAA,sDAEI2M,GAAa,CACT3H,SAAUM,EAAON,SACjB9E,OAAQA,IACTM,KACCoF,EAAQ4F,UACV7K,OAAM,SAAAC,GACJ6G,OAAOC,MAAM9G,MARrB,4CAdqB,kEA0BrB,4BAAAZ,EAAA,sDACQkJ,EAAW,CACX9I,YAAakF,EAAOlF,YACpB6K,UAAW3F,EAAO2F,UAClBC,YAAa5F,EAAO4F,YACpB9F,YAAaE,EAAOF,YACpB3B,MAAO,WACP0J,SAAU7H,EAAO6H,SACjBlI,KAAMK,EAAOL,KACbkG,OAAQjL,GAEZuM,GAAU,CACNzH,SAAUM,EAAON,SACjBkE,SAAUA,IACX1I,KACCoF,EAAQ4F,UACV7K,OAAM,SAAAC,GACJ6G,OAAOC,MAAM9G,MAjBrB,4CA1BqB,kEAgDrB,4BAAAZ,EAAA,sDACQkJ,EAAW,CACX9I,YAAakF,EAAOlF,YACpB6K,UAAW3F,EAAO2F,UAClBC,YAAa5F,EAAO4F,YACpB9F,YAAaE,EAAOF,YACpB3B,MAAO,OACP0J,SAAU7H,EAAO6H,SACjBlI,KAAMK,EAAOL,KACbkG,OAAQjL,GAEZuM,GAAU,CACNzH,SAAUM,EAAON,SACjBkE,SAAUA,IACX1I,KACCoF,EAAQ4F,UACV7K,OAAM,SAAAC,GACJ6G,OAAOC,MAAM9G,MAjBrB,4CAhDqB,sBAwErB,OACI,6BACI,kBAACgH,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,KAAN,KACI,yBAAK7D,UAAU,kCAGX,4BAAQiB,KAAK,SAASkB,QAAQ,OAAOlC,QAAS,kBAAM2B,EAAQ4F,UAAUxH,UAAU,6BAC5E,uBAAGA,UAAU,6BAEjB,wBAAIA,UAAU,WAAd,mBAGJ,kBAAC4D,EAAA,EAAKwF,SAAN,qBACA,kBAACxF,EAAA,EAAKyF,KAAN,KACK/H,EAAOJ,QADZ,IACsBI,EAAOH,WAE7B,kBAACyC,EAAA,EAAKwF,SAAN,gBACA,kBAACxF,EAAA,EAAKyF,KAAN,KACK/H,EAAO7B,OAEZ,kBAACmE,EAAA,EAAKwF,SAAN,cACA,kBAACxF,EAAA,EAAKyF,KAAN,KACK/H,EAAOL,MAEZ,kBAAC2C,EAAA,EAAKwF,SAAN,wBACA,kBAACxF,EAAA,EAAKyF,KAAN,KACK/H,EAAOF,aAEZ,kBAACwC,EAAA,EAAKwF,SAAN,2BACA,kBAACxF,EAAA,EAAKyF,KAAN,KACK/H,EAAO4F,aAEZ,kBAACtD,EAAA,EAAKwF,SAAN,oBACA,kBAACxF,EAAA,EAAKyF,KAAN,KACK/H,EAAOgI,eAoBRhI,EAAO6F,QACP,oCACI,kBAACvD,EAAA,EAAKwF,SAAN,oBACA,kBAACxF,EAAA,EAAKyF,KAAN,KACK/H,EAAOiI,cAMN,WAAT/J,GAA+B,WAATA,GAAsC,cAAjB8B,EAAO7B,QACnD,yBAAKO,UAAU,uCACX,kBAAC+E,EAAA,EAAD,CAAQ9D,KAAK,SAASjB,UAAU,iCAAiCC,QArItE,kBAAM8I,GAAQ,KAqIT,gBAGA,kBAAC,IAAD,CAAM/I,UAAU,iCAAiCf,GAAI,CACjDoC,SAAS,cACT5B,MAAO,CACH6B,OAAQA,EACRkI,SAAUhK,KAJlB,iBASR,6BACA,6BAEiB,WAATA,GAAsC,cAAjB8B,EAAO7B,OACxB,yBAAKO,UAAU,iCACX,4BAAQiB,KAAK,SAASjB,UAAU,mCAAmCC,QAAS,kBA5JvF,0CA4J6FwJ,KAAlF,mBAOC,WAATjK,GAAsC,aAAjB8B,EAAO7B,OACxB,yBAAKO,UAAU,iCACX,4BAAQiB,KAAK,SAASjB,UAAU,mCAAmCC,QAAS,kBArKvF,0CAqK6FyJ,KAAlF,uBAUxB,kBAACC,GAAA,EAAD,CAAOb,KAAMA,EAAMc,OAAQZ,GACvB,kBAACW,GAAA,EAAME,OAAP,CAAcC,aAAW,GACrB,kBAACH,GAAA,EAAMI,MAAP,iDAEJ,kBAACJ,GAAA,EAAMK,OAAP,KACI,kBAACjF,EAAA,EAAD,CAAQ5C,QAAQ,YAAYlC,QAAS,kBAAM+I,MAA3C,UAGA,kBAACjE,EAAA,EAAD,CAAQ5C,QAAQ,UAAUlC,QAAS,kBAvL9B,0CAuLoCgK,KAAzC,2BClDLC,OA9Hf,WACI,IADkB,EACHhB,cACuBzJ,OAAS,GAAvC6B,EAFU,EAEVA,OAAQkI,EAFE,EAEFA,SAEVjD,EAASvC,iBAAO1C,EAAOlF,aACvBqK,EAAYzC,iBAAO1C,EAAO6F,QAAU,IACpC5B,EAAUvB,iBAAO,IACjB0C,EAAW1C,iBAAO,IAClB2C,EAAiB3C,iBAAO,IARZ,EASY5G,mBAAS,IATrB,mBASX0I,EATW,KASFc,EATE,KAUZhF,EAAUC,cACRxE,EAAgBL,IAAhBK,YAXU,EAYoBD,mBAAS,IAZ7B,mBAYXqI,EAZW,KAYEoB,EAZF,OAaMzJ,mBAAS,IAbf,mBAaX8I,EAbW,KAaLY,EAbK,KAeZ5K,EAASmB,EAAYS,IAfT,4CAuBlB,4BAAA9B,EAAA,sDAGQkJ,EAAW,CACX9I,YAAamK,EAAOjC,QAAQrG,MAC5BgJ,UAAW3F,EAAO2F,UAClBC,YAAa5F,EAAO4F,YACpB9F,YAAauF,EAAerC,QAAQrG,MACpCwB,MAAO6B,EAAO7B,MACd0J,SAAU7H,EAAO6H,SACjBlI,KAAMK,EAAOL,KACbkG,OAAQV,EAAUnC,QAAQrG,OAAS,MAGvCwK,GAAU,CACNzH,SAAUM,EAAON,SACjBkE,SAAUA,IACX1I,KACCoF,EAAQE,KAAK,MACfnF,OAAM,SAAAC,GACJ6G,OAAOC,MAAM9G,MApBrB,4CAvBkB,kEAgDlB,sBAAAZ,EAAA,yDAEqB,WAAbwN,EAFR,6BAGQ1C,EAHR,SAGuBT,EAAmB,CAC9BnK,OAAQA,IAJpB,8CAMQ2K,EAAe,CACX,CAAEnE,GAAI,EAAGjD,MAAO,eAP5B,oCAUQqH,EAVR,UAUsB3B,IAVtB,mCAWQ0B,EAAe,CACX,CAAEnE,GAAI,EAAGjD,MAAO,aAChB,CAAEiD,GAAI,EAAGjD,MAAO,YAChB,CAAEiD,GAAI,EAAGjD,MAAO,UAd5B,oBAkBImH,EAlBJ,UAkBqBxB,EAAW,CAAEnE,KAAMK,EAAOL,OAlB/C,gFAhDkB,sBA2ElB,OANAlD,qBAAU,YArEQ,mCAsEd4F,KAGD,IAIC,oCAEI,kBAACC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,KAAN,KACI,yBAAK7D,UAAU,kCACX,4BAAQiB,KAAK,SAASkB,QAAQ,OAAOlC,QAAS,kBAAM2B,EAAQ4F,UAAUxH,UAAU,6BAC5E,uBAAGA,UAAU,6BAEjB,wBAAIA,UAAU,WAAd,iBAEJ,kBAACwE,EAAA,EAAD,CAAMC,SAvFJ,4CAwFE,8BAAUO,UAAQ,GACd,kBAACR,EAAA,EAAKE,MAAN,CAAYhC,GAAG,mBACX,kBAAC8B,EAAA,EAAKG,MAAN,qBACA,kBAAC,EAAD,CAAkBE,IAAK0B,EAAQb,aAAcpE,EAAOlF,YAAa8J,KAAMA,KAE3E,kBAAC1B,EAAA,EAAKE,MAAN,CAAYhC,GAAG,eACX,kBAAC8B,EAAA,EAAKG,MAAN,gBACA,kBAAC,EAAD,CAAaY,QAASA,EAAQjB,QAAQrG,MAAOyH,aAAcpE,EAAO7B,MAAOgG,YAAaA,EAAaZ,IAAK6B,EAAUlB,cAAe,SAAAM,GAAO,OAAIc,EAAWd,OAG3J,kBAACtB,EAAA,EAAKE,MAAN,CAAYhC,GAAG,cACX,kBAAC8B,EAAA,EAAKG,MAAN,cACA,kBAAC,EAAD,CAAYa,cAAe,SAAAM,GAAO,OAAIc,EAAWd,IAAUJ,aAAcpE,EAAOL,KAAM4D,IAAKU,EAASM,cAnF1G,CAClB,CAAEnD,GAAI,EAAGzB,KAAM,YACf,CAAEyB,GAAI,EAAGzB,KAAM,UACf,CAAEyB,GAAI,EAAGzB,KAAM,oBAmFC,kBAACuD,EAAA,EAAKE,MAAN,CAAYhC,GAAG,gBACVpB,EAAO6F,QACJ,oCACI,kBAAC3C,EAAA,EAAKG,MAAN,oBACA,kBAAC,EAAD,CAAeE,IAAK4B,EAAWX,QAASA,EAASJ,aAAcpE,EAAO6F,OAAQ1B,YAAaA,MAIvG,kBAACjB,EAAA,EAAKE,MAAN,CAAYhC,GAAG,eACX,kBAAC8B,EAAA,EAAKG,MAAN,wBACA,kBAACH,EAAA,EAAKI,QAAN,CAAc6C,GAAG,WAAWC,KAAM,EAAGhC,aAAcpE,EAAOF,YAAayD,IAAK8B,EAAgB7B,UAAQ,KAExG,kBAACC,EAAA,EAAD,CAAQ/E,UAAU,QAAQiB,KAAK,UAA/B,qB,UCtGTnE,WAAMuI,YA1BrB,SAA2BtJ,EAAO8I,GAM9B,OACI,6BAES9I,EAAMoO,YAGHpO,EAAMoO,aAAe,4BAAQnK,UAAU,gCAAgC0F,aAAc3J,EAAM2J,aACvFb,IAAKA,EAAKc,SAX9B,SAA0BvB,GACtBS,EAAIP,QAAQrG,MAAQmG,EAAEkB,OAAOrH,QAYTlC,EAAMoO,YAAYxJ,KAAI,SAACM,GACnB,OAAO,4BAAQF,IAAKE,EAAKyB,GAAIzE,MAAOgD,EAAKyB,IAAKzB,EAAKA,UAN/D,uDCRb,SAAemJ,KAAtB,gC,8CAAO,4BAAApO,EAAA,6DAEGmD,EAAYC,aAAaC,QAAQ,cAEnBxD,EAAG,oBAJpB,SAMUS,IAAMoD,IAFC7D,gEAEgB,CAChC8D,QAAS,CACLC,cAAe,UAAYT,KAEhC3C,MAAK,SAAAC,GACJ,OAAOA,EAASC,QACjBC,OAAM,SAAAC,GACL,OAAIA,EAAMH,UACFG,EAAMH,SAASC,KAAKE,MACb,MAfhB,oF,sBCMQ,SAASyN,KAEpB,IAAMtG,EAAWC,mBACX4D,EAAc5D,mBACd6D,EAAqB7D,mBACrBoE,EAAcpE,mBACdsG,EAAgBtG,mBAEd5F,EAAWpB,IAAXoB,OAEFwD,EAAUC,cAVgB,EAYNzE,mBAAS,IAZH,mBAYzBR,EAZyB,KAYlBqH,EAZkB,OAaF7G,oBAAS,GAbP,mBAazBG,EAbyB,KAahBC,EAbgB,OAcMJ,mBAAS,IAdf,mBAczB+M,EAdyB,KAcZI,EAdY,iDAgBhC,WAA4BnG,GAA5B,SAAApI,EAAA,yDACIoI,EAAEC,iBAEEuD,EAAYtD,QAAQrG,QAAU4J,EAAmBvD,QAAQrG,MAHjE,yCAIegG,EAAS,2BAJxB,uBAQQA,EAAS,IACTzG,GAAW,GATnB,SAUcY,EAAO,CACTX,MAAOsG,EAASO,QAAQrG,MACxBP,SAAUkK,EAAYtD,QAAQrG,MAC9B9B,SAAUiM,EAAY9D,QAAQrG,MAC9B5B,WAAYiO,EAAchG,QAAQrG,QAd9C,OAgBQ2D,EAAQE,KAAK,UAhBrB,kDAkBQmC,EAAS,+BAlBjB,2DAhBgC,kEAwChC,sBAAAjI,EAAA,kEACIuO,EADJ,SACyBH,KADzB,8EAxCgC,sBAmDhC,OANArM,qBAAU,YA7CsB,mCA8C5B4F,KACD,IAKC,oCACI,kBAACC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,KAAN,KACI,wBAAI7D,UAAU,oBAAd,oBACCpD,GAAS,kBAAC2H,EAAA,EAAD,CAAOpC,QAAQ,UAAUvF,GACnC,kBAAC4H,EAAA,EAAD,CAAMC,SAzDU,6CA0DZ,kBAACD,EAAA,EAAKE,MAAN,CAAYhC,GAAG,YACX,kBAAC8B,EAAA,EAAKG,MAAN,uBACA,kBAACH,EAAA,EAAKI,QAAN,CAAc3D,KAAK,OAAO4D,IAAKuD,EAAaF,YAAY,iBAAiBpD,UAAQ,KAErF,kBAACN,EAAA,EAAKE,MAAN,CAAYhC,GAAG,SACX,kBAAC8B,EAAA,EAAKG,MAAN,cACA,kBAACH,EAAA,EAAKI,QAAN,CAAc3D,KAAK,QAAQ4D,IAAKd,EAAUe,UAAQ,KAEtD,kBAACN,EAAA,EAAKE,MAAN,CAAYhC,GAAG,YACX,kBAAC8B,EAAA,EAAKG,MAAN,sBACA,kBAACH,EAAA,EAAKI,QAAN,CAAc3D,KAAK,WAAW4D,IAAK+C,EAAa9C,UAAQ,KAE5D,kBAACN,EAAA,EAAKE,MAAN,CAAYhC,GAAG,oBACX,kBAAC8B,EAAA,EAAKG,MAAN,+BACA,kBAACH,EAAA,EAAKI,QAAN,CAAc3D,KAAK,WAAW4D,IAAKgD,EAAoB/C,UAAQ,KAEnE,kBAACN,EAAA,EAAKE,MAAN,CAAYhC,GAAG,gBACX,kBAAC8B,EAAA,EAAKG,MAAN,cACA,kBAAC,GAAD,CAAmBE,IAAKyF,EAAeH,YAAaA,KAExD,kBAACK,GAAA,EAAD,CAAWxK,UAAU,eACjB,kBAAC+E,EAAA,EAAD,CAAQC,SAAUzH,EAAS0D,KAAK,UAAhC,yBCnDbwJ,OArBf,WAEE,OACE,kBAAC,IAAD,KACE,kBAACvN,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC0B,EAAD,CAAc8L,OAAK,EAACC,KAAK,IAAI7L,UAAWkE,IACxC,kBAACpE,EAAD,CAAc+L,KAAK,kBAAkB7L,UAAW6I,KAChD,kBAAC/I,EAAD,CAAc+L,KAAK,cAAc7L,UAAWuL,KAC5C,kBAAC,IAAD,CAAOM,KAAK,UAAU7L,UAAWqJ,KACjC,kBAAC,IAAD,CAAOwC,KAAK,SAAS7L,UAAWuJ,KAChC,kBAAC,IAAD,CAAOsC,KAAK,mBAAmB7L,UAAWgF,IAC1C,kBAAClF,EAAD,CAAc+L,KAAK,kBAAkB7L,UAAW+J,KAChD,kBAACjK,EAAD,CAAc+L,KAAK,aAAa7L,UAAWwH,KAC3C,kBAAC1H,EAAD,CAAc+L,KAAK,cAAc7L,UAAWoL,S,OC1BtDU,IAAS5L,OACP,kBAAC,IAAM6L,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.149c9150.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-olecosta.b3cd613a.svg\";","import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\n\r\nconst app = firebase.initializeApp({\r\n  apiKey: \"AIzaSyAE-hVWy62caraZx7f5QdRKKqdukhJMkAY\",\r\n  authDomain: \"tfg-apartaments.firebaseapp.com\",\r\n  projectId: \"tfg-apartaments\",\r\n  storageBucket: \"tfg-apartaments.appspot.com\",\r\n  messagingSenderId: \"863303276615\",\r\n  appId: \"1:863303276615:web:7f5f05a0f7edba33e3b962\"\r\n})\r\n\r\nexport const auth = app.auth()\r\nexport default app\r\n","const url = `https://apt-management-web-app.herokuapp.com`\r\n\r\nexport default url ","import axios from \"axios\";\r\nimport url from \"../constants/url\";\r\n\r\n\r\nexport async function postSignUp(props) {\r\n\r\n    const completeURL = url + `/api/signUp/userID/${props.userID}?userName=${props.userName}&aptID=${props.apartmentID}&workerType=${props.workerType}`\r\n    // const url = `http://localhost:5000/api/signUp/userID/${props.userID}?userName=${props.userName}&aptID=${props.apartmentID}`\r\n\r\n    return await axios.post(completeURL, {\r\n    }).then(response => {\r\n        return response.data\r\n\r\n    }).catch(error => {\r\n\r\n        if (error.response.data.error) {\r\n            return error.response.data.error\r\n        }\r\n\r\n    })\r\n\r\n}","import React, { useContext, useState, useEffect } from \"react\"\r\nimport { auth } from \"../firebase\"\r\nimport { postSignUp } from \"../service/postSignUp\"\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  async function signup({ email, password, userName, apartmentID, workerType }) {\r\n    auth.createUserWithEmailAndPassword(email, password)\r\n      .then(doc => {\r\n        postSignUp({\r\n          userID: doc.user.uid,\r\n          userName: userName,\r\n          apartmentID: apartmentID,\r\n          workerType: workerType\r\n        })\r\n      }).catch(function (error) {\r\n        return error\r\n      })\r\n  }\r\n\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut()\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email)\r\n  }\r\n\r\n  function updateEmail(email) {\r\n    return currentUser.updateEmail(email)\r\n  }\r\n\r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password)\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n    return unsubscribe\r\n\r\n\r\n  }, [])\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth()\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }}\r\n    ></Route>\r\n  )\r\n}\r\n","import axios from \"axios\";\r\nimport url from \"../constants/url\";\r\n\r\n\r\nexport async function getTicket(props) {\r\n\r\n    const userToken = localStorage.getItem('user-token')\r\n    let completeURL = \"\"\r\n\r\n    console.log(props.role)\r\n\r\n    if (props.role === \"admin\") {\r\n        completeURL = url + `/api/tickets/adminID/${props.userID}?state=${props.state}`\r\n    } else if (props.role === \"tenant\") {\r\n        completeURL = url + `/api/tickets/tenantID/${props.userID}?state=${props.state}`\r\n    } else if (props.role === \"worker\") {\r\n        completeURL = url + `/api/tickets/workerID/${props.userID}?state=${props.state}`\r\n    } else {\r\n        return []\r\n    }\r\n\r\n    return await axios.get(completeURL, {\r\n        headers: {\r\n            Authorization: 'Bearer ' + userToken,\r\n        },\r\n    }).then(response => {\r\n        return response.data\r\n\r\n    }).catch(error => {\r\n        if (error.response) {\r\n            if (error.response.data.error) {\r\n                return []\r\n            }\r\n        }\r\n    })\r\n\r\n}\r\n","import React, { Fragment, useState } from 'react'\r\nimport { Container, Dropdown, DropdownButton } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Tickets(props) {\r\n    const [showTickets, setShowTickets] = useState(false)\r\n\r\n    return (\r\n        <div className=\"p-2\">\r\n            <button\r\n                onClick={() => showTickets ? setShowTickets(false) : setShowTickets(true)}\r\n            >\r\n                <strong className=\"pl-2 pr-3\">TIQUES {props.state}</strong>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-arrow-down\" viewBox=\"0 0 16 16\">\r\n                    <path fill-rule=\"evenodd\" d=\"M8 1a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L7.5 13.293V1.5A.5.5 0 0 1 8 1z\" />\r\n                </svg>\r\n            </button>\r\n\r\n            {\r\n\r\n                props.tickets.length === 0 && showTickets ? (\r\n                    <div> No hay tiques disponibles </div>\r\n                ) : (\r\n                    showTickets && props.tickets.map((t) => {\r\n                        return (\r\n                            <Dropdown.Item key={t.ticketID} >\r\n                                <span>Tipo: {t.type} </span>\r\n                                <br />\r\n                                <span>Apartamento : {t.aptName} {t.aptNumber} </span>\r\n                                <br />\r\n                                <span>Descripción : {t.description}</span>\r\n                                <br />\r\n                                <Link to={{\r\n                                    pathname: `/ticket-details`,\r\n                                    state: {\r\n                                        ticket: t,\r\n                                        userID: props.userID,\r\n                                        role: props.role\r\n                                    }\r\n                                }}>Ver detalles</Link>\r\n                            </Dropdown.Item>\r\n                        )\r\n                    })\r\n                )}\r\n\r\n            {/* {\r\n                props.tickets.length === 0 ? (\r\n                    <div> No hay tiques disponibles </div>\r\n                ) : (\r\n                    props.tickets.map((t) => {\r\n                        return (\r\n                            <Dropdown.Item key={t.ticketID} >\r\n                                <span>Tipo: {t.type} </span>\r\n                                <br />\r\n                                <span>Apartamento : {t.aptName} {t.aptNumber} </span>\r\n                                <br />\r\n                                <span>Descripción : {t.description}</span>\r\n                                <br />\r\n                                <Link to={{\r\n                                    pathname: `/ticket-details`,\r\n                                    state: {\r\n                                        ticket: t,\r\n                                        userID: props.userID,\r\n                                        role: props.role\r\n                                    }\r\n                                }}>Ver detalles</Link>\r\n                            </Dropdown.Item>\r\n\r\n                        )\r\n                    })\r\n                )\r\n            }\r\n            <br></br> */}\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Tickets\r\n","import axios from \"axios\";\r\nimport url from '../constants/url'\r\n\r\nexport async function getRole(props) {\r\n\r\n    const userToken = localStorage.getItem('user-token')\r\n\r\n    const completeURL = url + `/api/rol/userID/` + `${props.userID}`\r\n\r\n    return await axios.get(completeURL, {\r\n        headers: {\r\n            Authorization: 'Bearer ' + userToken,\r\n        },\r\n    }).then(response => {\r\n        return response.data\r\n\r\n    }).catch(error => {\r\n        if (error.response) {\r\n            if (error.response.status === (401)) {\r\n                return \"Unauthorized\"\r\n            }\r\n        }\r\n        return \"Unauthorized\"\r\n    })\r\n\r\n}","import React from 'react'\r\nimport { Navbar, NavDropdown, NavbarBrand, Nav, Container } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nconst logo = require('../images/logo-olecosta.svg')\r\n\r\n\r\n\r\nexport default function NavBar({ interfaceName }) {\r\n\r\n    const { logout } = useAuth()\r\n    const history = useHistory()\r\n\r\n    async function handleLogout() {\r\n        try {\r\n            await logout()\r\n            history.push(\"/login\")\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Navbar collapseOnSelect expand=\"sm\" bg=\"dark\" variant=\"dark\" sticky=\"top\">\r\n                <Navbar.Brand href=\"/\" className=\"\">\r\n                    {/* <img\r\n                        src={logo}\r\n                        alt=\"logo\"\r\n                        className='w-25'\r\n                    /> */}\r\n                    <strong className=\"white-text\">{interfaceName}</strong>\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"me-auto\">\r\n                        <Nav.Link href=\"/newTicket\">Nuevo tique</Nav.Link>\r\n                        <NavDropdown title=\"Admin\" id=\"collasible-nav-dropdown\">\r\n                            <NavDropdown.Item href=\"/new-Worker\">Nuevo trabajador</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                        <Nav.Link onClick={() => handleLogout()}>Cerrar Sesión</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </>\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { Card, Button, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { getTicket } from \"../service/getTicket\"\r\nimport Tickets from '../components/Tickets'\r\nimport { getRole } from \"../service/getRole\"\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\nimport NavBar from \"../components/NavBar\"\r\n\r\nexport default function Dashboard() {\r\n  const [error, setError] = useState(\"\")\r\n  const { currentUser, logout } = useAuth()\r\n  const history = useHistory()\r\n  const [reqTickets, setReqTickets] = useState([])\r\n  const [acptTickets, setAcptTickets] = useState([])\r\n  const [doneTickets, setDoneTickets] = useState([])\r\n  const [userRol, setUserRol] = useState(\"tenant\")\r\n\r\n  const userID = currentUser.uid\r\n\r\n  async function setup() {\r\n    try {\r\n      const role = await getRole({\r\n        userID: userID\r\n      })\r\n\r\n      if (role === \"Unauthorized\") {\r\n        history.push(\"/login\")\r\n      }\r\n\r\n      setUserRol(role)\r\n\r\n      setReqTickets(await getTicket({\r\n        state: \"requested\",\r\n        userID: userID,\r\n        role: role,\r\n      }))\r\n\r\n      setAcptTickets(await getTicket({\r\n        state: \"accepted\",\r\n        userID: userID,\r\n        role: role,\r\n      }))\r\n      setDoneTickets(await getTicket({\r\n        state: \"done\",\r\n        userID: userID,\r\n        role: role,\r\n      }))\r\n\r\n    } catch (error) {\r\n      if (error.response) {\r\n        window.alert(\"Network Error, try to reset the app\")\r\n      }\r\n      if (!error.status) {\r\n        window.alert(\"Network Error, try to reset the app\")\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    setup()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n\r\n    <>\r\n      <NavBar interfaceName=\"Dashboard\"></NavBar>\r\n      <Card>\r\n        <Card.Body>\r\n          <Tickets state={\"SOLICITADOS\"} role={userRol} userID={userID} tickets={reqTickets}></Tickets>\r\n          <Tickets state={\"ACEPTADOS\"} role={userRol} userID={userID} tickets={acptTickets}></Tickets>\r\n          <Tickets state={\"REALIZADOS\"} role={userRol} userID={userID} tickets={doneTickets}></Tickets>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n\r\n  )\r\n}\r\n","import React, { useRef, useState } from \"react\"\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport default function ForgotPassword() {\r\n  const emailRef = useRef()\r\n  const { resetPassword } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [message, setMessage] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      setMessage(\"\")\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await resetPassword(emailRef.current.value)\r\n      setMessage(\"Check your inbox for further instructions\")\r\n    } catch {\r\n      setError(\"Failed to reset password\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Restablecer Contraseña</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          {message && <Alert variant=\"success\">{message}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required />\r\n            </Form.Group>\r\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n              Restablecer Contraseña\r\n            </Button>\r\n          </Form>\r\n          <div className=\"w-100 text-center mt-3\">\r\n            <Link to=\"/login\">Iniciar Sesión</Link>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        ¿Necesitas una cuenta? <Link to=\"/signup\">Registrarse</Link>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import axios from \"axios\";\r\nimport url from \"../constants/url\";\r\n\r\nexport async function postTicket(props) {\r\n\r\n    const userToken = localStorage.getItem('user-token')\r\n\r\n    console.log(props.userID)\r\n\r\n    const completeURL = url + `/api/tickets/userID/${props.userID}`\r\n\r\n    // const url = `http://localhost:5000/api/tickets/userID/${props.userID}`\r\n\r\n    return await axios.post(completeURL, props.postData, {\r\n        headers: {\r\n            Authorization: 'Bearer ' + userToken,\r\n        },\r\n    }).then(response => {\r\n\r\n        return response.data\r\n\r\n    }).catch(error => {\r\n\r\n        if (error.response.data.error) {\r\n            return []\r\n        }\r\n\r\n    })\r\n\r\n}\r\n","import axios from \"axios\";\r\nimport url from '../constants/url'\r\n\r\nexport async function getApartments() {\r\n\r\n    const userToken = localStorage.getItem('user-token')\r\n\r\n    const completeURL = url + `/api/apartments`\r\n\r\n    return await axios.get(completeURL, {\r\n        headers: {\r\n            Authorization: 'Bearer ' + userToken,\r\n        },\r\n    }).then(response => {\r\n        return response.data\r\n\r\n    }).catch(error => {\r\n        if (error.response) {\r\n            if (error.response.data.error) {\r\n                return []\r\n            }\r\n        }\r\n\r\n        return []\r\n    })\r\n\r\n\r\n\r\n\r\n}","import axios from \"axios\";\r\nimport url from \"../constants/url\";\r\n\r\n\r\nexport async function getWorkers(props) {\r\n\r\n    const userToken = localStorage.getItem('user-token')\r\n\r\n    const completeURL = url + `/api/workers/?type=${props.type}`\r\n\r\n\r\n    return await axios.get(completeURL, {\r\n        headers: {\r\n            Authorization: 'Bearer ' + userToken,\r\n        },\r\n    }).then(response => {\r\n\r\n        return response.data\r\n\r\n    }).catch(error => {\r\n        if (error.response) {\r\n            if (error.response.data.error) {\r\n                return []\r\n            }\r\n        }\r\n\r\n    })\r\n\r\n}\r\n","import React from 'react'\r\nimport { getWorkers } from '../service/getWorkers'\r\n\r\nfunction StateSelect(props, ref) {\r\n\r\n    async function stateOnChange(e) {\r\n        console.log(ref.current.value)\r\n        ref.current.value = e.target.value\r\n        props.workersChange(await getWorkers({ type: props.typeRef }))\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            {\r\n                props.typeOfState.length === 0 ? (\r\n                    <label> No States avaliable</label>\r\n                ) : (\r\n                    <select className=\"browser-default custom-select\" defaultValue={props.defaultValue} ref={ref} onChange={stateOnChange}>\r\n                        {\r\n                            props.typeOfState.map((s) => {\r\n                                return <option key={s.id} value={s.state}>{s.state}</option>\r\n                            })\r\n                        }\r\n                    </select>\r\n                )}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.forwardRef(StateSelect)\r\n","import React from 'react'\r\nimport { getWorkers } from '../service/getWorkers'\r\n\r\nfunction TypeSelect(props, ref) {\r\n\r\n    async function typeOnChange(e) {\r\n        console.log(e.target.value)\r\n        ref.current.value = e.target.value\r\n        props.workersChange(await getWorkers({ type: ref.current.value }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <select className=\"browser-default custom-select\" defaultValue={props.defaultValue} ref={ref} onChange={typeOnChange}>\r\n                {\r\n                    props.typeOfTickets.map((type) => {\r\n                        return <option key={type.id} value={type.type}>{type.type}</option>\r\n                    })\r\n                }\r\n            </select>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.forwardRef(TypeSelect)\r\n\r\n\r\n","import React from 'react'\r\n\r\nfunction WorkersSelect(props, ref) {\r\n\r\n    function workerChange(e) {\r\n        ref.current.value = e.target.value\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {console.log(props.workers)}\r\n            {console.log(\"VALUE: \" + props.defaultValue)}\r\n            {\r\n                props.workers.length === 0 ? (\r\n                    <label> NO WORKERS</label>\r\n                ) : (\r\n                    <select className=\"browser-default custom-select\" defaultValue={props.defaultValue} ref={ref} onChange={workerChange}>\r\n                        {\r\n                            props.workers.map((w) => {\r\n                                console.log(props.defaultValue)\r\n                                return <option key={w.id} value={w.id}> {w.name} </option>\r\n                            })\r\n                        }\r\n                    </select>\r\n                )\r\n            }\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default React.forwardRef(WorkersSelect)\r\n","import React from 'react'\r\n\r\nfunction TimeChoose(props, ref) {\r\n\r\n    function timeChange(e) {\r\n        ref.current.value = e.target.value\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {props.ticketState !== \"requested\" &&\r\n                <label>Choose a time:\r\n                    <input type=\"datetime-local\" id=\"meeting-time\"\r\n                        name=\"meeting-time\" ref={ref}\r\n                        onChange={timeChange} required ></input>\r\n                </label>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.forwardRef(TimeChoose)\r\n","import React from 'react'\r\nfunction ApartmentsSelect(props, ref) {\r\n\r\n    function aptChange(e) {\r\n        ref.current.value = e.target.value\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {\r\n                props.apts.length === 0 ? (\r\n                    <label> NO APARTAMENTS</label>\r\n                ) : (\r\n\r\n                    <select className=\"browser-default custom-select\" defaultValue={props.defaultValue} ref={ref} onChange={aptChange}>\r\n                        {\r\n                            props.apts.map((apt) => {\r\n                                return <option key={apt.id} value={apt.id}>{apt.name} {apt.number} </option>\r\n                            })\r\n                        }\r\n                    </select>\r\n                )\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.forwardRef(ApartmentsSelect)\r\n","import axios from \"axios\";\r\nimport url from \"../constants/url\";\r\n\r\nexport async function getTenantApartment(props) {\r\n\r\n    const userToken = localStorage.getItem('user-token')\r\n\r\n    const completeURL = url + `/api/apartments/tenantID/${props.userID}`\r\n\r\n    return await axios.get(completeURL, {\r\n        headers: {\r\n            Authorization: 'Bearer ' + userToken,\r\n        },\r\n    }).then(response => {\r\n        return response.data\r\n    }).catch(error => {\r\n        return []\r\n    })\r\n\r\n\r\n\r\n\r\n}\r\n","import React from 'react'\r\nimport { auth } from '../firebase'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useState, useEffect, useRef, createRef } from 'react'\r\nimport { postTicket } from '../service/postTicket'\r\nimport { getApartments } from '../service/getApartments'\r\nimport StateSelect from '../components/StateSelect'\r\nimport TypeSelect from '../components/TypeSelect'\r\nimport WorkersSelect from '../components/WorkersSelect'\r\nimport TimeChoose from '../components/TimeChoose'\r\nimport ApartmentsSelect from '../components/ApartmentsSelect'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { getRole } from '../service/getRole'\r\nimport { Form, Button, Card, Alert, Modal } from \"react-bootstrap\"\r\nimport { getTenantApartment } from '../service/getTenantApartment'\r\n\r\n\r\n\r\nfunction NewTicket() {\r\n\r\n    // const timeRef = useRef(null)\r\n    const aptRef = createRef(\"\")\r\n    const workerRef = useRef(null)\r\n    const typeRef = useRef(\"\")\r\n    const stateRef = useRef(\"\")\r\n    const descriptionRef = useRef(\"\")\r\n    const [workers, setWorkers] = useState([])\r\n    const history = useHistory()\r\n    const { currentUser } = useAuth()\r\n    const [typeOfState, setTypeOfState] = useState([])\r\n    const [apts, setApts] = useState([])\r\n\r\n    const userID = currentUser.uid\r\n\r\n    const typeOfTickets = [\r\n        { id: 1, type: \"cleaning\" },\r\n        { id: 2, type: \"runner\" },\r\n        { id: 3, type: \"maintenance\" }\r\n    ]\r\n\r\n\r\n\r\n    async function setup() {\r\n        //Comprobar si el rol es tenant coger el apartamento que tiene asignado y no un select\r\n        const role = await getRole({\r\n            userID: userID\r\n        })\r\n\r\n        if (role === \"tenant\") {\r\n            setApts([await getTenantApartment({\r\n                userID: userID\r\n            })])\r\n            setTypeOfState([\r\n                { id: 1, state: \"requested\" }\r\n            ])\r\n        } else {\r\n            setApts(await getApartments())\r\n            setTypeOfState([\r\n                { id: 1, state: \"requested\" },\r\n                { id: 2, state: \"accepted\" },\r\n                { id: 3, state: \"done\" }\r\n            ])\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    async function handleSubmit(e) {\r\n\r\n        e.preventDefault()\r\n\r\n        const userID = auth.currentUser.uid\r\n        const todaysDate = await getTodayDate()\r\n\r\n        let postData = {\r\n            apartmentID: aptRef.current.value,\r\n            state: stateRef.current.value,\r\n            type: typeRef.current.value,\r\n            description: descriptionRef.current.value,\r\n            createdBy: userID,\r\n            createdTime: todaysDate\r\n        }\r\n\r\n\r\n        if (stateRef.current.value !== \"requested\") {\r\n            postData.worker = workerRef.current.value\r\n        }\r\n\r\n        console.log(postData)\r\n\r\n        await postTicket({\r\n            postData: postData,\r\n            userID: userID\r\n        })\r\n\r\n        history.push(\"/\")\r\n    }\r\n\r\n\r\n    async function getTodayDate() {\r\n        //Slice for getting correct format \r\n        var today = new Date().toISOString().slice(0, -8);\r\n        return today\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setup()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <Card>\r\n                <Card.Body>\r\n                    <div className=\"mb-3 d-flex align-items-center\">\r\n                        <button type=\"button\" variant=\"link\" onClick={() => history.goBack()} className=\"mr-auto btn btn-secondary\">\r\n                            <i className=\"bi bi-arrow-return-left\"></i>\r\n                        </button>\r\n                        <h1 className=\"mr-auto\">Crear Tique</h1>\r\n                    </div>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"apartmentSelect\">\r\n                            <Form.Label>Apartamento:</Form.Label>\r\n                            <ApartmentsSelect ref={aptRef} apts={apts}></ApartmentsSelect>\r\n                        </Form.Group>\r\n                        <Form.Group id=\"stateSelect\">\r\n                            <Form.Label>Estado:</Form.Label>\r\n                            <StateSelect typeRef={typeRef.current.value} typeOfState={typeOfState} ref={stateRef} workersChange={workers => setWorkers(workers)}></StateSelect>\r\n                        </Form.Group>\r\n                        <Form.Group id=\"typeSelect\">\r\n                            <Form.Label>Tipo:</Form.Label>\r\n                            <TypeSelect workersChange={workers => setWorkers(workers)} ref={typeRef} typeOfTickets={typeOfTickets}></TypeSelect>\r\n                        </Form.Group>\r\n                        <Form.Group id=\"workerSelect\">\r\n                            {((stateRef.current.value === \"accepted\") || (stateRef.current.value === \"done\")) &&\r\n                                <>\r\n                                    <Form.Label>Worker:</Form.Label>\r\n                                    <WorkersSelect ref={workerRef} workers={workers} typeOfState={typeOfState} ></WorkersSelect>\r\n                                </>\r\n                            }\r\n                        </Form.Group>\r\n                        <Form.Group id=\"description\">\r\n                            <Form.Label>Descripción:</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={3} ref={descriptionRef} required ></Form.Control>\r\n                        </Form.Group>\r\n                        <Button className=\"w-100\" type=\"submit\">\r\n                            Guardar Tique\r\n                        </Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NewTicket\r\n","import React, { useRef, useState } from \"react\"\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\n\r\nexport default function UpdateProfile() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const { currentUser, updatePassword, updateEmail } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useHistory()\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n\r\n    const promises = []\r\n    setLoading(true)\r\n    setError(\"\")\r\n\r\n    if (emailRef.current.value !== currentUser.email) {\r\n      promises.push(updateEmail(emailRef.current.value))\r\n    }\r\n    if (passwordRef.current.value) {\r\n      promises.push(updatePassword(passwordRef.current.value))\r\n    }\r\n\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        history.push(\"/\")\r\n      })\r\n      .catch(() => {\r\n        setError(\"Failed to update account\")\r\n      })\r\n      .finally(() => {\r\n        setLoading(false)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Update Profile</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                ref={emailRef}\r\n                required\r\n                defaultValue={currentUser.email}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                ref={passwordRef}\r\n                placeholder=\"Leave blank to keep the same\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group id=\"password-confirm\">\r\n              <Form.Label>Password Confirmation</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                ref={passwordConfirmRef}\r\n                placeholder=\"Leave blank to keep the same\"\r\n              />\r\n            </Form.Group>\r\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        <Link to=\"/\">Cancel</Link>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { createRef, useEffect, useRef, useState } from \"react\"\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { getApartments } from \"../service/getApartments\"\r\nimport ApartmentsSelect from \"../components/ApartmentsSelect\"\r\n\r\nexport default function Signup() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const userNameRef = useRef()\r\n  const { signup } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useHistory()\r\n  const aptRef = createRef(\"\")\r\n  const [apts, setApts] = useState([])\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n\r\n    try {\r\n\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await signup({\r\n        email: emailRef.current.value,\r\n        password: passwordRef.current.value,\r\n        userName: userNameRef.current.value,\r\n        apartmentID: aptRef.current.value\r\n      })\r\n      history.push(\"/login\")\r\n    } catch (error) {\r\n      setError(\"Failed to create an account\")\r\n    }\r\n\r\n  }\r\n\r\n  async function setup() {\r\n    setApts(await getApartments())\r\n  }\r\n\r\n  useEffect(() => {\r\n    setup()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Registrarse</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"userName\">\r\n              <Form.Label>Nombre Usuario</Form.Label>\r\n              <Form.Control type=\"text\" ref={userNameRef} placeholder=\"Javier Gallego\" required />\r\n            </Form.Group>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Contraseña</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordRef} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"password-confirm\">\r\n              <Form.Label>Confirma contraseña</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"apartament\">\r\n              <Form.Label>Apartamento</Form.Label>\r\n              <ApartmentsSelect ref={aptRef} apts={apts}></ApartmentsSelect>\r\n            </Form.Group>\r\n\r\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n              Crear Cuenta\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        ¿Ya tienes una cuenta? <Link to=\"/login\">Iniciar Sesión</Link>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { useRef, useState } from \"react\"\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { auth } from \"../firebase\"\r\n\r\nexport default function Login() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const { login } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useHistory()\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await login(emailRef.current.value, passwordRef.current.value)\r\n      const token = await auth.currentUser.getIdToken()\r\n      localStorage.setItem('user-token', token)\r\n      history.push(\"/\")\r\n    } catch {\r\n      setError(\"Failed to log in\")\r\n    }\r\n\r\n    // No sirve para nada porque en el context al cambiar el userOnchange pone el setLoading(false)\r\n    // setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Iniciar Sesión</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Contraseña</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordRef} required />\r\n            </Form.Group>\r\n            <Button className=\"w-100\" type=\"submit\">\r\n              Iniciar Sesión\r\n            </Button>\r\n          </Form>\r\n          <div className=\"w-100 text-center mt-3\">\r\n            <Link to=\"/forgot-password\">¿Olvidaste la contraseña?</Link>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        ¿Necesitas una cuenta? <Link to=\"/signup\">Registrarse</Link>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import axios from \"axios\";\r\nimport url from \"../constants/url\";\r\n\r\nexport async function putTicket(props) {\r\n\r\n    const userToken = localStorage.getItem('user-token')\r\n    console.log(props.ticketID)\r\n    console.log(props.postData)\r\n\r\n    const completeURL = url + `/api/tickets/ticketId/${props.ticketID}`\r\n\r\n    return await axios.put(completeURL, props.postData, {\r\n        headers: {\r\n            Authorization: 'Bearer ' + userToken,\r\n        },\r\n    }).then(response => {\r\n        return response.data\r\n    }).catch(error => {\r\n        if (error.response.data.error) {\r\n            return []\r\n        }\r\n    })\r\n\r\n}\r\n","import axios from \"axios\";\r\nimport url from \"../constants/url\";\r\n\r\nexport async function removeTicket(props) {\r\n\r\n    const userToken = localStorage.getItem('user-token')\r\n\r\n    console.log(props.ticketID)\r\n    console.log(props.userID)\r\n\r\n    const completeURL = url + `/api/tickets/${props.ticketID}/userID/${props.userID}`\r\n\r\n    console.log(completeURL)\r\n\r\n    return await axios.delete(completeURL, {\r\n        headers: {\r\n            Authorization: 'Bearer ' + userToken,\r\n        },\r\n    }).then(response => {\r\n\r\n        return response.data\r\n\r\n    }).catch(error => {\r\n        return error\r\n\r\n\r\n    })\r\n\r\n}","import React, { useState } from 'react'\r\nimport { Button, Card, Modal } from 'react-bootstrap';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom'\r\nimport { putTicket } from '../service/putTicket';\r\nimport { removeTicket } from '../service/removeTicket';\r\n\r\n\r\n\r\nfunction TicketDetails() {\r\n\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    let location = useLocation()\r\n    const { ticket } = location.state || [];\r\n    const { userID } = location.state || [];\r\n    const { role } = location.state || \"tenant\";\r\n    const history = useHistory()\r\n\r\n    async function handleRemoveTicket() {\r\n\r\n        removeTicket({\r\n            ticketID: ticket.ticketID,\r\n            userID: userID\r\n        }).then(\r\n            history.goBack()\r\n        ).catch(error => {\r\n            window.alert(error)\r\n        })\r\n    }\r\n\r\n    async function handleAcceptTicket() {\r\n        var postData = {\r\n            apartmentID: ticket.apartmentID,\r\n            createdBy: ticket.createdBy,\r\n            createdTime: ticket.createdTime,\r\n            description: ticket.description,\r\n            state: \"accepted\",\r\n            tenantID: ticket.tenantID,\r\n            type: ticket.type,\r\n            worker: userID\r\n        }\r\n        putTicket({\r\n            ticketID: ticket.ticketID,\r\n            postData: postData\r\n        }).then(\r\n            history.goBack()\r\n        ).catch(error => {\r\n            window.alert(error)\r\n        })\r\n\r\n    }\r\n\r\n    async function handleRealizeTicket() {\r\n        var postData = {\r\n            apartmentID: ticket.apartmentID,\r\n            createdBy: ticket.createdBy,\r\n            createdTime: ticket.createdTime,\r\n            description: ticket.description,\r\n            state: \"done\",\r\n            tenantID: ticket.tenantID,\r\n            type: ticket.type,\r\n            worker: userID\r\n        }\r\n        putTicket({\r\n            ticketID: ticket.ticketID,\r\n            postData: postData\r\n        }).then(\r\n            history.goBack()\r\n        ).catch(error => {\r\n            window.alert(error)\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <Card.Body>\r\n                    <div className=\"mb-3 d-flex align-items-center\">\r\n\r\n                        {/* <h2 className=\"text-center\">Restablecer Contraseña</h2> */}\r\n                        <button type=\"button\" variant=\"link\" onClick={() => history.goBack()} className=\"mr-auto btn btn-secondary\">\r\n                            <i className=\"bi bi-arrow-return-left\"></i>\r\n                        </button>\r\n                        <h1 className=\"mr-auto\">Detalles Tique</h1>\r\n                    </div>\r\n\r\n                    <Card.Subtitle>Apartamento:</Card.Subtitle>\r\n                    <Card.Text>\r\n                        {ticket.aptName} {ticket.aptNumber}\r\n                    </Card.Text>\r\n                    <Card.Subtitle>Estado:</Card.Subtitle>\r\n                    <Card.Text>\r\n                        {ticket.state}\r\n                    </Card.Text>\r\n                    <Card.Subtitle>Tipo:</Card.Subtitle>\r\n                    <Card.Text>\r\n                        {ticket.type}\r\n                    </Card.Text>\r\n                    <Card.Subtitle>Descripción:</Card.Subtitle>\r\n                    <Card.Text>\r\n                        {ticket.description}\r\n                    </Card.Text>\r\n                    <Card.Subtitle>Fecha Creación:</Card.Subtitle>\r\n                    <Card.Text>\r\n                        {ticket.createdTime}\r\n                    </Card.Text>\r\n                    <Card.Subtitle>Creado por:</Card.Subtitle>\r\n                    <Card.Text>\r\n                        {ticket.createdByName}\r\n                    </Card.Text>\r\n                    {/* {\r\n                        ticket.tenantName ? (\r\n                            <>\r\n                                <Card.Subtitle>Tenant:</Card.Subtitle>\r\n                                <Card.Text>\r\n                                    {ticket.tenantName}\r\n                                </Card.Text>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <Card.Subtitle>Tenant:</Card.Subtitle>\r\n                                <Card.Text>\r\n                                    No tenant was active\r\n                                </Card.Text>\r\n                            </>\r\n                        )\r\n                    } */}\r\n                    {\r\n                        ticket.worker &&\r\n                        <>\r\n                            <Card.Subtitle>Trabajador:</Card.Subtitle>\r\n                            <Card.Text>\r\n                                {ticket.workerName}\r\n                            </Card.Text>\r\n                        </>\r\n                    }\r\n\r\n                    {\r\n                        (role !== \"tenant\" || (role === \"tenant\" && ticket.state === \"requested\")) &&\r\n                        <div className=\"pt-2 d-flex justify-content-between\">\r\n                            <Button type=\"button\" className=\"btn btn-danger btn-lg mx-auto \" onClick={handleShow}>\r\n                                Borrar Tique\r\n                            </Button>\r\n                            <Link className=\"btn btn-primary btn-lg mx-auto\" to={{\r\n                                pathname: `/editTicket`,\r\n                                state: {\r\n                                    ticket: ticket,\r\n                                    userRole: role\r\n                                }\r\n                            }}>Editar Tique</Link>\r\n                        </div>\r\n                    }\r\n                    <br></br>\r\n                    <div>\r\n                        {\r\n                            role === \"worker\" && ticket.state === \"requested\" && (\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    <button type=\"button\" className=\"mx-2 btn btn-success btn-lg w-75\" onClick={() => handleAcceptTicket()}> Aceptar Tique</button>\r\n                                </div>\r\n                            )\r\n\r\n                        }\r\n                        {\r\n\r\n                            role === \"worker\" && ticket.state === \"accepted\" && (\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    <button type=\"button\" className=\"mx-2 btn btn-success btn-lg w-75\" onClick={() => handleRealizeTicket()}> Realizar Tique</button>\r\n                                </div>\r\n                            )\r\n\r\n                        }\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>¿Seguro que quieres borrar el tique?</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={() => handleClose()}>\r\n                        Cerrar\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={() => handleRemoveTicket()}>\r\n                        Sí, Borrar Tique\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div >\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default TicketDetails\r\n","import React, { createRef, useEffect, useRef, useState } from 'react'\r\nimport { Button, Card, Form } from 'react-bootstrap';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport ApartmentsSelect from '../components/ApartmentsSelect';\r\nimport StateSelect from '../components/StateSelect';\r\nimport TypeSelect from '../components/TypeSelect';\r\nimport WorkersSelect from '../components/WorkersSelect';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { getApartments } from '../service/getApartments';\r\nimport { getRole } from '../service/getRole';\r\nimport { getTenantApartment } from '../service/getTenantApartment';\r\nimport { getWorkers } from '../service/getWorkers';\r\nimport { putTicket } from '../service/putTicket';\r\n\r\n\r\nfunction EditTicket() {\r\n    let location = useLocation()\r\n    const { ticket, userRole } = location.state || [];\r\n\r\n    const aptRef = useRef(ticket.apartmentID)\r\n    const workerRef = useRef(ticket.worker || \"\")\r\n    const typeRef = useRef(\"\")\r\n    const stateRef = useRef(\"\")\r\n    const descriptionRef = useRef(\"\")\r\n    const [workers, setWorkers] = useState([])\r\n    const history = useHistory()\r\n    const { currentUser } = useAuth()\r\n    const [typeOfState, setTypeOfState] = useState([])\r\n    const [apts, setApts] = useState([])\r\n\r\n    const userID = currentUser.uid\r\n\r\n    const typeOfTickets = [\r\n        { id: 1, type: \"cleaning\" },\r\n        { id: 2, type: \"runner\" },\r\n        { id: 3, type: \"maintenance\" }\r\n    ]\r\n\r\n    async function handleEditTicket() {\r\n\r\n\r\n        var postData = {\r\n            apartmentID: aptRef.current.value,\r\n            createdBy: ticket.createdBy,\r\n            createdTime: ticket.createdTime,\r\n            description: descriptionRef.current.value,\r\n            state: ticket.state,\r\n            tenantID: ticket.tenantID,\r\n            type: ticket.type,\r\n            worker: workerRef.current.value || null\r\n        }\r\n\r\n        putTicket({\r\n            ticketID: ticket.ticketID,\r\n            postData: postData\r\n        }).then(\r\n            history.push(\"/\")\r\n        ).catch(error => {\r\n            window.alert(error)\r\n        })\r\n\r\n    }\r\n\r\n    async function setup() {\r\n        //Comprobar si el rol es tenant coger el apartamento que tiene asignado y no un select\r\n        if (userRole === \"tenant\") {\r\n            setApts([await getTenantApartment({\r\n                userID: userID\r\n            })])\r\n            setTypeOfState([\r\n                { id: 1, state: \"requested\" }\r\n            ])\r\n        } else {\r\n            setApts(await getApartments())\r\n            setTypeOfState([\r\n                { id: 1, state: \"requested\" },\r\n                { id: 2, state: \"accepted\" },\r\n                { id: 3, state: \"done\" }\r\n            ])\r\n        }\r\n\r\n        setWorkers(await getWorkers({ type: ticket.type }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        setup()\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n            <Card>\r\n                <Card.Body>\r\n                    <div className=\"mb-3 d-flex align-items-center\">\r\n                        <button type=\"button\" variant=\"link\" onClick={() => history.goBack()} className=\"mr-auto btn btn-secondary\">\r\n                            <i className=\"bi bi-arrow-return-left\"></i>\r\n                        </button>\r\n                        <h1 className=\"mr-auto\">Editar Tique</h1>\r\n                    </div>\r\n                    <Form onSubmit={handleEditTicket}>\r\n                        <fieldset disabled>\r\n                            <Form.Group id=\"apartmentSelect\">\r\n                                <Form.Label>Apartamento:</Form.Label>\r\n                                <ApartmentsSelect ref={aptRef} defaultValue={ticket.apartmentID} apts={apts}></ApartmentsSelect>\r\n                            </Form.Group>\r\n                            <Form.Group id=\"stateSelect\">\r\n                                <Form.Label>Estado:</Form.Label>\r\n                                <StateSelect typeRef={typeRef.current.value} defaultValue={ticket.state} typeOfState={typeOfState} ref={stateRef} workersChange={workers => setWorkers(workers)}></StateSelect>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group id=\"typeSelect\">\r\n                                <Form.Label>Tipo:</Form.Label>\r\n                                <TypeSelect workersChange={workers => setWorkers(workers)} defaultValue={ticket.type} ref={typeRef} typeOfTickets={typeOfTickets}></TypeSelect>\r\n                            </Form.Group>\r\n                        </fieldset>\r\n                        <Form.Group id=\"workerSelect\">\r\n                            {ticket.worker &&\r\n                                <>\r\n                                    <Form.Label>Trabajador:</Form.Label>\r\n                                    <WorkersSelect ref={workerRef} workers={workers} defaultValue={ticket.worker} typeOfState={typeOfState} ></WorkersSelect>\r\n                                </>\r\n                            }\r\n                        </Form.Group>\r\n                        <Form.Group id=\"description\">\r\n                            <Form.Label>Descripción:</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={3} defaultValue={ticket.description} ref={descriptionRef} required ></Form.Control>\r\n                        </Form.Group>\r\n                        <Button className=\"w-100\" type=\"submit\">\r\n                            Editar Tique\r\n                        </Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default EditTicket\r\n","import React from 'react'\r\n\r\nfunction WorkersTypeSelect(props, ref) {\r\n\r\n    function workerTypeChange(e) {\r\n        ref.current.value = e.target.value\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !props.workersType ? (\r\n                    <label> No Worker Types</label>\r\n                ) : (\r\n                    props.workersType && <select className=\"browser-default custom-select\" defaultValue={props.defaultValue}\r\n                        ref={ref} onChange={workerTypeChange}>\r\n                        {\r\n                            props.workersType.map((type) => {\r\n                                return <option key={type.id} value={type.id}>{type.type}</option>\r\n                            })\r\n                        }\r\n                    </select>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.forwardRef(WorkersTypeSelect)\r\n\r\n","import axios from \"axios\";\r\nimport url from \"../constants/url\";\r\n\r\n\r\nexport async function getWorkersType() {\r\n\r\n    const userToken = localStorage.getItem('user-token')\r\n\r\n    const completeURL = url + `/api/workers-type`\r\n\r\n    return await axios.get(completeURL, {\r\n        headers: {\r\n            Authorization: 'Bearer ' + userToken,\r\n        },\r\n    }).then(response => {\r\n        return response.data\r\n    }).catch(error => {\r\n        if (error.response) {\r\n            if (error.response.data.error) {\r\n                return []\r\n            }\r\n        }\r\n        return []\r\n    })\r\n\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useRef } from 'react'\r\nimport { Alert, Button, Card, Container, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\nimport WorkersTypeSelect from '../components/WorkersTypeSelect'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { getWorkersType } from '../service/getWorkersType'\r\n\r\n\r\n\r\nexport default function NewWorker() {\r\n\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const userNameRef = useRef()\r\n    const workerTypeRef = useRef()\r\n\r\n    const { signup } = useAuth()\r\n\r\n    const history = useHistory()\r\n\r\n    const [error, setError] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n    const [workersType, setWorkersType] = useState([])\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError(\"Passwords do not match\")\r\n        }\r\n\r\n        try {\r\n            setError(\"\")\r\n            setLoading(true)\r\n            await signup({\r\n                email: emailRef.current.value,\r\n                password: passwordRef.current.value,\r\n                userName: userNameRef.current.value,\r\n                workerType: workerTypeRef.current.value\r\n            })\r\n            history.push(\"/login\")\r\n        } catch (error) {\r\n            setError(\"Failed to create an account\")\r\n        }\r\n\r\n\r\n    }\r\n\r\n    async function setup() {\r\n        setWorkersType(await getWorkersType())\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setup()\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Nuevo Trabajador</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"userName\">\r\n                            <Form.Label>Nombre Usuario</Form.Label>\r\n                            <Form.Control type=\"text\" ref={userNameRef} placeholder=\"Javier Gallego\" required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Contraseña</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password-confirm\">\r\n                            <Form.Label>Confirma contraseña</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"workerSelect\">\r\n                            <Form.Label>Type:</Form.Label>\r\n                            <WorkersTypeSelect ref={workerTypeRef} workersType={workersType} ></WorkersTypeSelect>\r\n                        </Form.Group>\r\n                        <Container className=\"text-center\">\r\n                            <Button disabled={loading} type=\"submit\">\r\n                                Crear Trabajador\r\n                            </Button>\r\n                        </Container>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\"\r\n\r\nimport { Container } from \"react-bootstrap\"\r\nimport { AuthProvider } from \"../contexts/AuthContext\"\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\r\n\r\nimport PrivateRoute from \"../routes/PrivateRoute\"\r\nimport Dashboard from \"../pages/Dashboard\"\r\nimport ForgotPassword from \"../pages/ForgotPassword\"\r\nimport NewTicket from \"../pages/NewTicket\"\r\nimport UpdateProfile from \"../pages/UpdateProfile\"\r\nimport Signup from \"../pages/Signup\"\r\nimport Login from \"../pages/Login\"\r\nimport TicketDetails from \"../pages/TicketDetails\"\r\nimport EditTicket from \"../pages/EditTicket\"\r\nimport NewWorker from \"../pages/NewWorker\"\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router>\r\n      <AuthProvider>\r\n        <Switch>\r\n          <PrivateRoute exact path=\"/\" component={Dashboard} />\r\n          <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\r\n          <PrivateRoute path=\"/new-worker\" component={NewWorker} />\r\n          <Route path=\"/signup\" component={Signup} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/forgot-password\" component={ForgotPassword} />\r\n          <PrivateRoute path=\"/ticket-details\" component={TicketDetails} />\r\n          <PrivateRoute path=\"/newTicket\" component={NewTicket} />\r\n          <PrivateRoute path=\"/editTicket\" component={EditTicket} />\r\n        </Switch>\r\n      </AuthProvider>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./components/App\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}